import os
os.rename("Makefile", "Makefile.old")

fileOut = open("Makefile", "w")

lines = ['#Generated by Edalize', \
         'ifndef MODEL_TECH', \
         '$(error Environment variable MODEL_TECH was not found. It should be set to <modelsim install path>/bin)', \
         'endif\n', \
         \
         'CC ?= gcc', \
         'CFLAGS   := -fPIC -fno-stack-protector -g -std=c99', \
         'CXXFLAGS := -fPIC -fno-stack-protector -g\n', \
         \
         'LD ?= ld', \
         'LDFLAGS := -shared -E\n', \
         \
         '#Try to determine if ModelSim is 32- or 64-bit.', \
         '#To manually override, set the environment MTI_VCO_MODE to 32 or 64', \
         'ifeq ($(findstring 64, $(shell $(MODEL_TECH)/../vco)),)', \
         'CFLAGS   += -m32', \
         'CXXFLAGS += -m32', \
         'LDFLAGS  += -melf_i386', \
         'endif\n', \
         \
         'RM ?= rm', \
         'INCS := -I$(MODEL_TECH)/../include\n', \
         \
         'VSIM ?= $(MODEL_TECH)/vsim\n', \
         \
         'TOPLEVEL      := tb_top_vopt', \
         'VPI_MODULES   :=', \
         'PARAMETERS    ?= PULP_XPULP=0 JTAG_DPI=0', \
         'PLUSARGS      ?=', \
         'VSIM_OPTIONS  ?= -sv_lib ../../../hw/vendor/lowrisc_opentitan/hw/dv/dpi/uartdpi/uartdpi -sv_lib ../../../hw/vendor/pulp_platform_pulpissimo/rtl/tb/remote_bitbang/librbs', \
         'EXTRA_OPTIONS ?= $(VSIM_OPTIONS) $(addprefix -g,$(PARAMETERS)) $(addprefix +,$(PLUSARGS))\n', \
         \
         'all: work $(VPI_MODULES)\n', \
         \
         'work:', \
         '\t$(VSIM) -c -do "edalize_main.tcl" -do "exit"\n', \
         \
         'vopt:', \
         '\tvopt -work work -debugdb -fsmdebug -pedanticerrors +acc=npr tb_top -o tb_top_vopt\n', \
         \
         'vopt-upf:', \
         '\tvopt -work work -suppress vopt-9653 -debugdb -fsmdebug -pedanticerrors +acc=npr tb_top -o tb_top_vopt -pa_upf ../../../core-v-mini-mcu.upf -pa_top "/tb_top/testharness_i/core_v_mini_mcu_i" -pa_lib work -pa_enable=highlight+debug $(addprefix -G,$(PARAMETERS))\n', \
         \
         'run: work vopt $(VPI_MODULES)', \
         '\t$(VSIM) -do run.tcl -c $(EXTRA_OPTIONS) tb_top\n', \
         \
         'run-gui: work vopt $(VPI_MODULES)', \
         '\t$(VSIM) -gui $(EXTRA_OPTIONS) tb_top\n', \
         \
         'run-upf: work vopt-upf $(VPI_MODULES)', \
         '\t$(VSIM) -do run.tcl -c $(addprefix -pli ,$(VPI_MODULES)) $(EXTRA_OPTIONS) tb_top_vopt -pa\n', \
         \
         'run-upf-gui: work vopt-upf $(VPI_MODULES)', \
         '\t$(VSIM) -gui $(EXTRA_OPTIONS) $(VPI_MODULES) tb_top_vopt -pa\n',]

fileOut.write('\n'.join(lines))
fileOut.close()

fileRun = open("run.tcl", "w")
fileRun.write("run -all; quit -code [expr [coverage attribute -name TESTSTATUS -concise] >= 2 ? [coverage attribute -name TESTSTATUS -concise] : 0]; exit")
fileRun.close()
