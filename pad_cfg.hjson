// Copyright 2020 ETH Zurich and University of Bologna.
// Solderpad Hardware License, Version 0.51, see LICENSE for details.
// SPDX-License-Identifier: SHL-0.51
// Derived from Occamy: https://github.com/pulp-platform/snitch/blob/master/hw/system/occamy/src/occamy_cfg.hjson
//
// Pads configuration for core-v-mini-mcu. Read by mcu_gen.py.
// 
// The pads contains the list of all the pads available in the design.
// Each pad is defined by its name and can have the following attributes:
//    num: <number> (mandatory) - the number of pads of this type
//    type: <input|output|inout|supply> (mandatory) - the type of the pad
//    num_offset: <number> (optional) - the offset to the first pad of this type (default 0)
//    mapping: <top|right|bottom|left> (optional) - the mapping of the pad in the design. Useful for ASICs (default top)
//    active: <low|high> (optional) - the active level of the pad (default high)
//    mux: <dict> (optional) - the muxing options for the pad
//    skip_declaration: <True|False> (optional) - skip the declaration of the pad in the top level (default False)
//    keep_internal: <True|False> (optional) - keep the pad internal to the design (default False)
//    layout_attributes: (optional) - collection of attributes related to the physical (ASIC) layout of the pads
//        index: (mandatory) index of the pad on its side of the I/O ring
//        orient: (optional) <R0|R90|R180|R270|MX|MX90|MY|MY90> - orientation of the pad
//        cell: (mandatory for type "supply") <valid name of cell in the desired tech. library> - specific cell to use if not a default pad cell (ex. for VDD/VSS pads)
//        offset: (optional) <float> - offset from edge (in um)
//        skip: (optional) <float> - distance from neighboring pad (in um)
// 
// Add this field at the same level of pads (not inside) if you want to define PADs attributes (n bits)
//    attributes: {
//        bits: n
//        resval: 0x3
//    },

{
    attributes: {
        bits: 4
    }
    pads: {

        clk: {
            num: 1,
            no_num: True
            type: input
        },
        rst: {
            num: 1,
            no_num: True
            active: low
            driven_manually: True
            type: input
        },
        boot_select: {
            num: 1,
            no_num: True
            type: input
        },
        execute_from_flash: {
            num: 1,
            no_num: True
            type: input
        },
        jtag_tck: {
            num: 1,
            no_num: True
            type: input
        },
        jtag_tms: {
            num: 1,
            no_num: True
            type: input
        },
        jtag_trst: {
            num: 1,
            no_num: True
            active: low
            type: input
        },
        jtag_tdi: {
            num: 1,
            no_num: True
            type: input
        },
        jtag_tdo: {
            num: 1,
            no_num: True
            type: output
        },
        uart0_rx: {
            num: 1,
            type: input
        },
        uart0_tx: {
            num: 1,
            type: output
        },
        exit_valid: {
            num: 1,
            no_num: True
            type: output
        },
        gpio: {
            num: 18,
            num_offset: 0, #first gpio is gpio0
            type: inout
        },
        spi_flash_sck: {
            num: 1,
            type: inout
        },
        spi_flash_csb: {
            num: 2, #carefull, the x-heep uses the CS from the spi pkg, change it
            type: inout
        },
        spi_flash_sd: {
            num: 4,
            type: inout
        },
        spi_host0_sck: {
            num: 1,
            type: inout
        },
        spi_host0_csb: {
            num: 2,
            type: inout
        },
        spi_host0_sd: {
            num: 4,
            type: inout
        },

        pdm2pcm0_pdm: {
            num: 1,
            type: inout
            mux: {
                pdm2pcm0_pdm: {
                    type: input
                },
                gpio: {
                    num_offset: 18
                    type: inout
                }
            }
        },
        pdm2pcm0_pdm_clk: {
            num: 1,
            type: inout
            mux: {
                pdm2pcm0_pdm_clk: {
                    type: output
                },
                gpio: {
                    num_offset: 19
                    type: inout
                }
            }
        },
        i2s0_sck: {
            num: 1,
            type: inout
            mux: {
                i2s0_sck: {
                    type: inout
                },
                gpio: {
                    num_offset:20
                    type: inout
                }
            }
        },
        i2s0_ws: {
            num: 1,
            type: inout
            mux: {
                i2s0_ws: {
                    type: inout
                },
                gpio: {
                    num_offset: 21
                    type: inout
                }
            }
        },
        i2s0_sd: {
            num: 1,
            type: inout
            mux: {
                i2s0_sd: {
                    type: inout
                },
                gpio: {
                    num_offset: 22
                    type: inout
                }
           }
        },
        spi_host1_csb: {
            num: 2,
            num_offset: 0,
            type: inout
            mux: {
                spi_host1_csb: {
                    num: 2,
                    num_offset: 0,
                    type: output
                },
                gpio: {
                    num: 2,
                    num_offset: 23,
                    type: inout
                },
            }
        },
        spi_host1_sck: {
            num: 1,
            type: inout
            mux: {
                spi_host1_sck: {
                    type: output
                },
                gpio: {
                    num_offset: 25,
                    type: inout
                },
            }
        },
        spi_host1_sd: {
            num: 4,
            num_offset: 0,
            type: inout
            mux: {
                spi_host1_sd: {
                    num: 4,
                    num_offset: 0,
                    type: inout
                },
                gpio: {
                    num: 4,
                    num_offset: 26,
                    type: inout
                },
            }
        },

        i2c0_scl: {
            num: 1,
            type: inout
            mux: {
                i2c0_scl: {
                    type: inout
                },
                gpio: {
                    num_offset: 31
                    type: inout
                },
            }
        },
        i2c0_sda: {
            num: 1,
            type: inout
            mux: {
                i2c0_sda: {
                    type: inout
                },
                gpio: {
                    num_offset: 30
                    type: inout
                },
            }
        }
    }
}
