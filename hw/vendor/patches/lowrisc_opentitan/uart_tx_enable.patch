diff --git a/hw/ip/uart/rtl/uart.sv b/hw/ip/uart/rtl/uart.sv
index 6a43618c1..b5d234039 100644
--- a/hw/ip/uart/rtl/uart.sv
+++ b/hw/ip/uart/rtl/uart.sv
@@ -52,9 +52,9 @@ module uart (
     .reg2hw,
     .hw2reg,
 
-    .rx    (cio_rx_i   ),
-    .tx    (cio_tx_o   ),
-
+    .rx          (cio_rx_i   ),
+    .tx          (cio_tx_o   ),
+    .tx_enable_o (cio_tx_en_o),
     .intr_tx_watermark_o,
     .intr_rx_watermark_o,
     .intr_tx_empty_o,
@@ -65,8 +65,6 @@ module uart (
     .intr_rx_parity_err_o
   );
 
-  // always enable the driving out of TX
-  assign cio_tx_en_o = 1'b1;
 
   // Assert Known for outputs
   `ASSERT_KNOWN(txenKnown, cio_tx_en_o)
diff --git a/hw/ip/uart/rtl/uart_core.sv b/hw/ip/uart/rtl/uart_core.sv
index 11235ad29..69d408335 100644
--- a/hw/ip/uart/rtl/uart_core.sv
+++ b/hw/ip/uart/rtl/uart_core.sv
@@ -14,6 +14,7 @@ module uart_core (
 
   input                  rx,
   output logic           tx,
+  output logic           tx_enable_o,
 
   output logic           intr_tx_watermark_o,
   output logic           intr_rx_watermark_o,
@@ -61,6 +62,8 @@ module uart_core (
   logic           rx_watermark_d, rx_watermark_prev_q;
   logic           tx_uart_idle_q;
 
+  assign tx_enable_o      = tx_enable;
+
   assign tx_enable        = reg2hw.ctrl.tx.q;
   assign rx_enable        = reg2hw.ctrl.rx.q;
   assign rxnf_enable      = reg2hw.ctrl.nf.q;
