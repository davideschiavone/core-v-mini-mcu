// File auto-generated by Padrick 0.3.1.post0.dev2+ge09286c
package pkg_internal_padframe_xheep;
  typedef struct packed{
    logic  chip2pad;
    logic  output_en;
  } mux_to_pad_pad_io_23_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_23_t;

  typedef struct packed{
    logic  chip2pad;
    logic  output_en;
  } mux_to_pad_pad_io_24_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_24_t;

  typedef struct packed{
    logic  chip2pad;
    logic  output_en;
  } mux_to_pad_pad_io_25_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_25_t;

  typedef struct packed{
    logic  chip2pad;
    logic  output_en;
  } mux_to_pad_pad_io_26_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_26_t;

  typedef struct packed{
    logic  chip2pad;
    logic  output_en;
  } mux_to_pad_pad_io_27_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_27_t;

  typedef struct packed{
    logic  chip2pad;
    logic  output_en;
  } mux_to_pad_pad_io_28_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_28_t;

  typedef struct packed{
    logic  chip2pad;
    logic  output_en;
  } mux_to_pad_pad_io_29_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_29_t;

  typedef struct packed{
    logic  chip2pad;
    logic  output_en;
  } mux_to_pad_pad_io_30_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_30_t;

  typedef struct packed{
    logic  chip2pad;
    logic  output_en;
  } mux_to_pad_pad_io_31_t;

  typedef struct packed{
    logic  pad2chip;
  } pad_to_mux_pad_io_31_t;

  typedef struct packed{
    mux_to_pad_pad_io_23_t pad_io_23;
    mux_to_pad_pad_io_24_t pad_io_24;
    mux_to_pad_pad_io_25_t pad_io_25;
    mux_to_pad_pad_io_26_t pad_io_26;
    mux_to_pad_pad_io_27_t pad_io_27;
    mux_to_pad_pad_io_28_t pad_io_28;
    mux_to_pad_pad_io_29_t pad_io_29;
    mux_to_pad_pad_io_30_t pad_io_30;
    mux_to_pad_pad_io_31_t pad_io_31;
  } mux_to_pads_t;

  typedef struct packed{
    pad_to_mux_pad_io_23_t pad_io_23;
    pad_to_mux_pad_io_24_t pad_io_24;
    pad_to_mux_pad_io_25_t pad_io_25;
    pad_to_mux_pad_io_26_t pad_io_26;
    pad_to_mux_pad_io_27_t pad_io_27;
    pad_to_mux_pad_io_28_t pad_io_28;
    pad_to_mux_pad_io_29_t pad_io_29;
    pad_to_mux_pad_io_30_t pad_io_30;
    pad_to_mux_pad_io_31_t pad_io_31;
  } pads_to_mux_t;



  // Indices definitions

  parameter PAD_MUX_GROUP_PAD23_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD23_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD23_SEL_SPI2_SPI2_CS_00 = 1'd1;

  parameter PAD_MUX_GROUP_PAD24_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD24_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD24_SEL_SPI2_SPI2_CS_01 = 1'd1;

  parameter PAD_MUX_GROUP_PAD25_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD25_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD25_SEL_SPI2_SPI2_SCK = 1'd1;

  parameter PAD_MUX_GROUP_PAD26_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD26_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD26_SEL_SPI2_SPI2_SD_00 = 1'd1;

  parameter PAD_MUX_GROUP_PAD27_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD27_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD27_SEL_SPI2_SPI2_SD_01 = 1'd1;

  parameter PAD_MUX_GROUP_PAD28_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD28_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD28_SEL_SPI2_SPI2_SD_02 = 1'd1;

  parameter PAD_MUX_GROUP_PAD29_SEL_WIDTH = 1;
  parameter logic[0:0] PAD_MUX_GROUP_PAD29_SEL_DEFAULT = 1'd0;
  parameter logic[0:0] PAD_MUX_GROUP_PAD29_SEL_SPI2_SPI2_SD_03 = 1'd1;

  parameter PAD_MUX_GROUP_PAD30_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD30_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD30_SEL_GPIO_GPIO_30 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD30_SEL_I2C_I2C_SDA = 2'd2;

  parameter PAD_MUX_GROUP_PAD31_SEL_WIDTH = 2;
  parameter logic[1:0] PAD_MUX_GROUP_PAD31_SEL_DEFAULT = 2'd0;
  parameter logic[1:0] PAD_MUX_GROUP_PAD31_SEL_GPIO_GPIO_31 = 2'd1;
  parameter logic[1:0] PAD_MUX_GROUP_PAD31_SEL_I2C_I2C_SCL = 2'd2;

  // Dynamic Pad  instance index

  parameter PORT_MUX_GROUP_PAD23_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD23_SEL_PAD_IO_23 = 1'd0;

  parameter PORT_MUX_GROUP_PAD24_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD24_SEL_PAD_IO_24 = 1'd0;

  parameter PORT_MUX_GROUP_PAD25_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD25_SEL_PAD_IO_25 = 1'd0;

  parameter PORT_MUX_GROUP_PAD26_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD26_SEL_PAD_IO_26 = 1'd0;

  parameter PORT_MUX_GROUP_PAD27_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD27_SEL_PAD_IO_27 = 1'd0;

  parameter PORT_MUX_GROUP_PAD28_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD28_SEL_PAD_IO_28 = 1'd0;

  parameter PORT_MUX_GROUP_PAD29_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD29_SEL_PAD_IO_29 = 1'd0;

  parameter PORT_MUX_GROUP_PAD30_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD30_SEL_PAD_IO_30 = 1'd0;

  parameter PORT_MUX_GROUP_PAD31_SEL_WIDTH = 1;
  parameter logic[0:0] PORT_MUX_GROUP_PAD31_SEL_PAD_IO_31 = 1'd0;
endpackage : pkg_internal_padframe_xheep
