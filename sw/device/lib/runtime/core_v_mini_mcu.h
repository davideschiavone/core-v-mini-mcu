// Copyright 2022 OpenHW Group
// Solderpad Hardware License, Version 2.1, see LICENSE.md for details.
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1

#ifndef COREV_MINI_MCU_H_
#define COREV_MINI_MCU_H_

#ifdef __cplusplus
extern "C" {
#endif  // __cplusplus

#define DEBUG_START_ADDRESS 0x10000000
#define DEBUG_SIZE 0x100000
#define DEBUG_END_ADDRESS (DEBUG_START_ADDRESS + DEBUG_SIZE)

#define PERIPHERAL_START_ADDRESS 0x20000000
#define PERIPHERAL_SIZE 0x100000
#define PERIPHERAL_END_ADDRESS (PERIPHERAL_START_ADDRESS + PERIPHERAL_SIZE)

#define EXT_SLAVE_START_ADDRESS 0x30000000
#define EXT_SLAVE_SIZE 0x1000000
#define EXT_SLAVE_END_ADDRESS (EXT_SLAVE_START_ADDRESS + EXT_SLAVE_SIZE)

#define SPI_FLASH_START_ADDRESS 0x40000000
#define SPI_FLASH_SIZE 0x1000000
#define SPI_FLASH_END_ADDRESS (SPI_FLASH_START_ADDRESS + SPI_FLASH_SIZE)

#define EXT_PERIPHERAL_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x0000000)
#define EXT_PERIPHERAL_SIZE 0x0010000
#define EXT_PERIPHERAL_END_ADDRESS (EXT_PERIPHERAL_START_ADDRESS + EXT_PERIPHERAL_SIZE)

#define SOC_CTRL_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x0010000)
#define SOC_CTRL_SIZE 0x0010000
#define SOC_CTRL_END_ADDRESS (SOC_CTRL_IDX_START_ADDRESS + SOC_CTRL_IDX_SIZE)

#define UART_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x0020000)
#define UART_SIZE 0x0000100
#define UART_END_ADDRESS (UART_START_ADDRESS + UART_SIZE)

#define PLIC_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x0030000)
#define PLIC_SIZE 0x0010000
#define PLIC_END_ADDRESS (PLIC_START_ADDRESS + PLIC_SIZE)

#define RV_TIMER_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x0040000)
#define RV_TIMER_SIZE 0x0010000
#define RV_TIMER_END_ADDRESS (RV_TIMER_START_ADDRESS + RV_TIMER_SIZE)

#define GPIO_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x0050000)
#define GPIO_SIZE 0x0010000
#define GPIO_END_ADDRESS (GPIO_START_ADDRESS + GPIO_SIZE)

#define SPI_HOST_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x0060000)
#define SPI_HOST_SIZE 0x0010000
#define SPI_HOST_END_ADDRESS (SPI_HOST_START_ADDRESS + SPI_HOST_SIZE)

#define BOOTROM_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x0070000)
#define BOOTROM_SIZE 0x0010000
#define BOOTROM_END_ADDRESS (BOOTROM_START_ADDRESS + BOOTROM_SIZE)

#define NULL_INTR 0
#define UART_INTR_TX_WATERMARK 1
#define UART_INTR_RX_WATERMARK 2
#define UART_INTR_TX_EMPT 3
#define UART_INTR_RX_OVERFLOW 4
#define UART_INTR_RX_FRAME_ERR 5
#define UART_INTR_RX_BREAK_ERR 6
#define UART_INTR_RX_TIMEOUT 7
#define UART_INTR_RX_PARITY_ERR 8
#define GPIO_INTR_0 9
#define GPIO_INTR_1 10
#define GPIO_INTR_2 11
#define GPIO_INTR_3 12
#define GPIO_INTR_4 13
#define GPIO_INTR_5 14
#define GPIO_INTR_6 15
#define GPIO_INTR_7 16
#define GPIO_INTR_8 17
#define GPIO_INTR_9 18
#define GPIO_INTR_10 19
#define GPIO_INTR_11 20
#define GPIO_INTR_12 21
#define GPIO_INTR_13 22
#define GPIO_INTR_14 23
#define GPIO_INTR_15 24
#define GPIO_INTR_16 25
#define GPIO_INTR_17 26
#define GPIO_INTR_18 27
#define GPIO_INTR_19 28
#define GPIO_INTR_20 29
#define GPIO_INTR_21 30
#define GPIO_INTR_22 31
#define GPIO_INTR_23 32
#define GPIO_INTR_24 33
#define GPIO_INTR_25 34
#define GPIO_INTR_26 35
#define GPIO_INTR_27 36
#define GPIO_INTR_28 37
#define GPIO_INTR_29 38
#define GPIO_INTR_30 39
#define GPIO_INTR_31 40
#define MEMCOPY_INTR_DONE 41


#ifdef __cplusplus
}  // extern "C"
#endif  // __cplusplus

#endif  // COREV_MINI_MCU_H_
