// Generated register defines for pad_control

// Copyright information found in source file:
// Copyright EPFL contributors.

// Licensing information found in source file:
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

#ifndef _PAD_CONTROL_REG_DEFS_
#define _PAD_CONTROL_REG_DEFS_

#ifdef __cplusplus
extern "C" {
#endif
// Register width
#define PAD_CONTROL_PARAM_REG_WIDTH 32

// Used to mux pad UART_RX
#define PAD_CONTROL_PAD_MUX_UART_RX_REG_OFFSET 0x0
#define PAD_CONTROL_PAD_MUX_UART_RX_PAD_MUX_UART_RX_MASK 0xf
#define PAD_CONTROL_PAD_MUX_UART_RX_PAD_MUX_UART_RX_OFFSET 0
#define PAD_CONTROL_PAD_MUX_UART_RX_PAD_MUX_UART_RX_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_MUX_UART_RX_PAD_MUX_UART_RX_MASK, .index = PAD_CONTROL_PAD_MUX_UART_RX_PAD_MUX_UART_RX_OFFSET })

// Used to mux pad UART_TX
#define PAD_CONTROL_PAD_MUX_UART_TX_REG_OFFSET 0x4
#define PAD_CONTROL_PAD_MUX_UART_TX_PAD_MUX_UART_TX_MASK 0xf
#define PAD_CONTROL_PAD_MUX_UART_TX_PAD_MUX_UART_TX_OFFSET 0
#define PAD_CONTROL_PAD_MUX_UART_TX_PAD_MUX_UART_TX_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_MUX_UART_TX_PAD_MUX_UART_TX_MASK, .index = PAD_CONTROL_PAD_MUX_UART_TX_PAD_MUX_UART_TX_OFFSET })

// Used to mux pad EXIT_VALID
#define PAD_CONTROL_PAD_MUX_EXIT_VALID_REG_OFFSET 0x8
#define PAD_CONTROL_PAD_MUX_EXIT_VALID_PAD_MUX_EXIT_VALID_MASK 0xf
#define PAD_CONTROL_PAD_MUX_EXIT_VALID_PAD_MUX_EXIT_VALID_OFFSET 0
#define PAD_CONTROL_PAD_MUX_EXIT_VALID_PAD_MUX_EXIT_VALID_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_MUX_EXIT_VALID_PAD_MUX_EXIT_VALID_MASK, .index = PAD_CONTROL_PAD_MUX_EXIT_VALID_PAD_MUX_EXIT_VALID_OFFSET })

// Used to mux pad I2C_SCL
#define PAD_CONTROL_PAD_MUX_I2C_SCL_REG_OFFSET 0xc
#define PAD_CONTROL_PAD_MUX_I2C_SCL_PAD_MUX_I2C_SCL_MASK 0xf
#define PAD_CONTROL_PAD_MUX_I2C_SCL_PAD_MUX_I2C_SCL_OFFSET 0
#define PAD_CONTROL_PAD_MUX_I2C_SCL_PAD_MUX_I2C_SCL_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_MUX_I2C_SCL_PAD_MUX_I2C_SCL_MASK, .index = PAD_CONTROL_PAD_MUX_I2C_SCL_PAD_MUX_I2C_SCL_OFFSET })

// Used to mux pad I2C_SDA
#define PAD_CONTROL_PAD_MUX_I2C_SDA_REG_OFFSET 0x10
#define PAD_CONTROL_PAD_MUX_I2C_SDA_PAD_MUX_I2C_SDA_MASK 0xf
#define PAD_CONTROL_PAD_MUX_I2C_SDA_PAD_MUX_I2C_SDA_OFFSET 0
#define PAD_CONTROL_PAD_MUX_I2C_SDA_PAD_MUX_I2C_SDA_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_MUX_I2C_SDA_PAD_MUX_I2C_SDA_MASK, .index = PAD_CONTROL_PAD_MUX_I2C_SDA_PAD_MUX_I2C_SDA_OFFSET })

// clk Attributes (Pull Up En, Pull Down En, etc. It is technology specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_CLK_REG_OFFSET 0x14
#define PAD_CONTROL_PAD_ATTRIBUTE_CLK_PAD_ATTRIBUTE_CLK_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_CLK_PAD_ATTRIBUTE_CLK_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_CLK_PAD_ATTRIBUTE_CLK_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_CLK_PAD_ATTRIBUTE_CLK_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_CLK_PAD_ATTRIBUTE_CLK_OFFSET })

// rst Attributes (Pull Up En, Pull Down En, etc. It is technology specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_RST_REG_OFFSET 0x18
#define PAD_CONTROL_PAD_ATTRIBUTE_RST_PAD_ATTRIBUTE_RST_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_RST_PAD_ATTRIBUTE_RST_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_RST_PAD_ATTRIBUTE_RST_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_RST_PAD_ATTRIBUTE_RST_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_RST_PAD_ATTRIBUTE_RST_OFFSET })

// boot_select Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_BOOT_SELECT_REG_OFFSET 0x1c
#define PAD_CONTROL_PAD_ATTRIBUTE_BOOT_SELECT_PAD_ATTRIBUTE_BOOT_SELECT_MASK \
  0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_BOOT_SELECT_PAD_ATTRIBUTE_BOOT_SELECT_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_BOOT_SELECT_PAD_ATTRIBUTE_BOOT_SELECT_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_BOOT_SELECT_PAD_ATTRIBUTE_BOOT_SELECT_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_BOOT_SELECT_PAD_ATTRIBUTE_BOOT_SELECT_OFFSET })

// execute_from_flash Attributes (Pull Up En, Pull Down En, etc. It is
// technology specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_REG_OFFSET 0x20
#define PAD_CONTROL_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_MASK \
  0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_OFFSET \
  0
#define PAD_CONTROL_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_PAD_ATTRIBUTE_EXECUTE_FROM_FLASH_OFFSET })

// jtag_tck Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TCK_REG_OFFSET 0x24
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TCK_PAD_ATTRIBUTE_JTAG_TCK_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TCK_PAD_ATTRIBUTE_JTAG_TCK_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TCK_PAD_ATTRIBUTE_JTAG_TCK_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TCK_PAD_ATTRIBUTE_JTAG_TCK_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TCK_PAD_ATTRIBUTE_JTAG_TCK_OFFSET })

// jtag_tms Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TMS_REG_OFFSET 0x28
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TMS_PAD_ATTRIBUTE_JTAG_TMS_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TMS_PAD_ATTRIBUTE_JTAG_TMS_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TMS_PAD_ATTRIBUTE_JTAG_TMS_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TMS_PAD_ATTRIBUTE_JTAG_TMS_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TMS_PAD_ATTRIBUTE_JTAG_TMS_OFFSET })

// jtag_trst Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TRST_REG_OFFSET 0x2c
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TRST_PAD_ATTRIBUTE_JTAG_TRST_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TRST_PAD_ATTRIBUTE_JTAG_TRST_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TRST_PAD_ATTRIBUTE_JTAG_TRST_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TRST_PAD_ATTRIBUTE_JTAG_TRST_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TRST_PAD_ATTRIBUTE_JTAG_TRST_OFFSET })

// jtag_tdi Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDI_REG_OFFSET 0x30
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDI_PAD_ATTRIBUTE_JTAG_TDI_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDI_PAD_ATTRIBUTE_JTAG_TDI_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDI_PAD_ATTRIBUTE_JTAG_TDI_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDI_PAD_ATTRIBUTE_JTAG_TDI_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDI_PAD_ATTRIBUTE_JTAG_TDI_OFFSET })

// jtag_tdo Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDO_REG_OFFSET 0x34
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDO_PAD_ATTRIBUTE_JTAG_TDO_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDO_PAD_ATTRIBUTE_JTAG_TDO_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDO_PAD_ATTRIBUTE_JTAG_TDO_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDO_PAD_ATTRIBUTE_JTAG_TDO_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_JTAG_TDO_PAD_ATTRIBUTE_JTAG_TDO_OFFSET })

// uart_rx Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_UART_RX_REG_OFFSET 0x38
#define PAD_CONTROL_PAD_ATTRIBUTE_UART_RX_PAD_ATTRIBUTE_UART_RX_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_UART_RX_PAD_ATTRIBUTE_UART_RX_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_UART_RX_PAD_ATTRIBUTE_UART_RX_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_UART_RX_PAD_ATTRIBUTE_UART_RX_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_UART_RX_PAD_ATTRIBUTE_UART_RX_OFFSET })

// uart_tx Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_UART_TX_REG_OFFSET 0x3c
#define PAD_CONTROL_PAD_ATTRIBUTE_UART_TX_PAD_ATTRIBUTE_UART_TX_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_UART_TX_PAD_ATTRIBUTE_UART_TX_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_UART_TX_PAD_ATTRIBUTE_UART_TX_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_UART_TX_PAD_ATTRIBUTE_UART_TX_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_UART_TX_PAD_ATTRIBUTE_UART_TX_OFFSET })

// exit_valid Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_EXIT_VALID_REG_OFFSET 0x40
#define PAD_CONTROL_PAD_ATTRIBUTE_EXIT_VALID_PAD_ATTRIBUTE_EXIT_VALID_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_EXIT_VALID_PAD_ATTRIBUTE_EXIT_VALID_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_EXIT_VALID_PAD_ATTRIBUTE_EXIT_VALID_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_EXIT_VALID_PAD_ATTRIBUTE_EXIT_VALID_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_EXIT_VALID_PAD_ATTRIBUTE_EXIT_VALID_OFFSET })

// gpio_0 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_0_REG_OFFSET 0x44
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_0_PAD_ATTRIBUTE_GPIO_0_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_0_PAD_ATTRIBUTE_GPIO_0_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_0_PAD_ATTRIBUTE_GPIO_0_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_0_PAD_ATTRIBUTE_GPIO_0_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_0_PAD_ATTRIBUTE_GPIO_0_OFFSET })

// gpio_1 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_1_REG_OFFSET 0x48
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_1_PAD_ATTRIBUTE_GPIO_1_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_1_PAD_ATTRIBUTE_GPIO_1_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_1_PAD_ATTRIBUTE_GPIO_1_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_1_PAD_ATTRIBUTE_GPIO_1_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_1_PAD_ATTRIBUTE_GPIO_1_OFFSET })

// gpio_2 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_2_REG_OFFSET 0x4c
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_2_PAD_ATTRIBUTE_GPIO_2_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_2_PAD_ATTRIBUTE_GPIO_2_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_2_PAD_ATTRIBUTE_GPIO_2_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_2_PAD_ATTRIBUTE_GPIO_2_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_2_PAD_ATTRIBUTE_GPIO_2_OFFSET })

// gpio_3 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_3_REG_OFFSET 0x50
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_3_PAD_ATTRIBUTE_GPIO_3_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_3_PAD_ATTRIBUTE_GPIO_3_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_3_PAD_ATTRIBUTE_GPIO_3_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_3_PAD_ATTRIBUTE_GPIO_3_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_3_PAD_ATTRIBUTE_GPIO_3_OFFSET })

// gpio_4 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_4_REG_OFFSET 0x54
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_4_PAD_ATTRIBUTE_GPIO_4_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_4_PAD_ATTRIBUTE_GPIO_4_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_4_PAD_ATTRIBUTE_GPIO_4_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_4_PAD_ATTRIBUTE_GPIO_4_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_4_PAD_ATTRIBUTE_GPIO_4_OFFSET })

// gpio_5 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_5_REG_OFFSET 0x58
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_5_PAD_ATTRIBUTE_GPIO_5_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_5_PAD_ATTRIBUTE_GPIO_5_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_5_PAD_ATTRIBUTE_GPIO_5_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_5_PAD_ATTRIBUTE_GPIO_5_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_5_PAD_ATTRIBUTE_GPIO_5_OFFSET })

// gpio_6 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_6_REG_OFFSET 0x5c
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_6_PAD_ATTRIBUTE_GPIO_6_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_6_PAD_ATTRIBUTE_GPIO_6_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_6_PAD_ATTRIBUTE_GPIO_6_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_6_PAD_ATTRIBUTE_GPIO_6_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_6_PAD_ATTRIBUTE_GPIO_6_OFFSET })

// gpio_7 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_7_REG_OFFSET 0x60
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_7_PAD_ATTRIBUTE_GPIO_7_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_7_PAD_ATTRIBUTE_GPIO_7_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_7_PAD_ATTRIBUTE_GPIO_7_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_7_PAD_ATTRIBUTE_GPIO_7_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_7_PAD_ATTRIBUTE_GPIO_7_OFFSET })

// gpio_8 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_8_REG_OFFSET 0x64
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_8_PAD_ATTRIBUTE_GPIO_8_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_8_PAD_ATTRIBUTE_GPIO_8_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_8_PAD_ATTRIBUTE_GPIO_8_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_8_PAD_ATTRIBUTE_GPIO_8_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_8_PAD_ATTRIBUTE_GPIO_8_OFFSET })

// gpio_9 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_9_REG_OFFSET 0x68
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_9_PAD_ATTRIBUTE_GPIO_9_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_9_PAD_ATTRIBUTE_GPIO_9_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_9_PAD_ATTRIBUTE_GPIO_9_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_9_PAD_ATTRIBUTE_GPIO_9_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_9_PAD_ATTRIBUTE_GPIO_9_OFFSET })

// gpio_10 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_10_REG_OFFSET 0x6c
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_10_PAD_ATTRIBUTE_GPIO_10_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_10_PAD_ATTRIBUTE_GPIO_10_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_10_PAD_ATTRIBUTE_GPIO_10_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_10_PAD_ATTRIBUTE_GPIO_10_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_10_PAD_ATTRIBUTE_GPIO_10_OFFSET })

// gpio_11 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_11_REG_OFFSET 0x70
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_11_PAD_ATTRIBUTE_GPIO_11_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_11_PAD_ATTRIBUTE_GPIO_11_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_11_PAD_ATTRIBUTE_GPIO_11_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_11_PAD_ATTRIBUTE_GPIO_11_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_11_PAD_ATTRIBUTE_GPIO_11_OFFSET })

// gpio_12 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_12_REG_OFFSET 0x74
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_12_PAD_ATTRIBUTE_GPIO_12_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_12_PAD_ATTRIBUTE_GPIO_12_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_12_PAD_ATTRIBUTE_GPIO_12_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_12_PAD_ATTRIBUTE_GPIO_12_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_12_PAD_ATTRIBUTE_GPIO_12_OFFSET })

// gpio_13 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_13_REG_OFFSET 0x78
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_13_PAD_ATTRIBUTE_GPIO_13_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_13_PAD_ATTRIBUTE_GPIO_13_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_13_PAD_ATTRIBUTE_GPIO_13_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_13_PAD_ATTRIBUTE_GPIO_13_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_13_PAD_ATTRIBUTE_GPIO_13_OFFSET })

// gpio_14 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_14_REG_OFFSET 0x7c
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_14_PAD_ATTRIBUTE_GPIO_14_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_14_PAD_ATTRIBUTE_GPIO_14_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_14_PAD_ATTRIBUTE_GPIO_14_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_14_PAD_ATTRIBUTE_GPIO_14_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_14_PAD_ATTRIBUTE_GPIO_14_OFFSET })

// gpio_15 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_15_REG_OFFSET 0x80
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_15_PAD_ATTRIBUTE_GPIO_15_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_15_PAD_ATTRIBUTE_GPIO_15_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_15_PAD_ATTRIBUTE_GPIO_15_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_15_PAD_ATTRIBUTE_GPIO_15_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_15_PAD_ATTRIBUTE_GPIO_15_OFFSET })

// gpio_16 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_16_REG_OFFSET 0x84
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_16_PAD_ATTRIBUTE_GPIO_16_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_16_PAD_ATTRIBUTE_GPIO_16_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_16_PAD_ATTRIBUTE_GPIO_16_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_16_PAD_ATTRIBUTE_GPIO_16_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_16_PAD_ATTRIBUTE_GPIO_16_OFFSET })

// gpio_17 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_17_REG_OFFSET 0x88
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_17_PAD_ATTRIBUTE_GPIO_17_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_17_PAD_ATTRIBUTE_GPIO_17_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_17_PAD_ATTRIBUTE_GPIO_17_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_17_PAD_ATTRIBUTE_GPIO_17_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_17_PAD_ATTRIBUTE_GPIO_17_OFFSET })

// gpio_18 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_18_REG_OFFSET 0x8c
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_18_PAD_ATTRIBUTE_GPIO_18_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_18_PAD_ATTRIBUTE_GPIO_18_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_18_PAD_ATTRIBUTE_GPIO_18_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_18_PAD_ATTRIBUTE_GPIO_18_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_18_PAD_ATTRIBUTE_GPIO_18_OFFSET })

// gpio_19 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_19_REG_OFFSET 0x90
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_19_PAD_ATTRIBUTE_GPIO_19_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_19_PAD_ATTRIBUTE_GPIO_19_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_19_PAD_ATTRIBUTE_GPIO_19_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_19_PAD_ATTRIBUTE_GPIO_19_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_19_PAD_ATTRIBUTE_GPIO_19_OFFSET })

// gpio_20 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_20_REG_OFFSET 0x94
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_20_PAD_ATTRIBUTE_GPIO_20_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_20_PAD_ATTRIBUTE_GPIO_20_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_20_PAD_ATTRIBUTE_GPIO_20_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_20_PAD_ATTRIBUTE_GPIO_20_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_20_PAD_ATTRIBUTE_GPIO_20_OFFSET })

// gpio_21 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_21_REG_OFFSET 0x98
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_21_PAD_ATTRIBUTE_GPIO_21_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_21_PAD_ATTRIBUTE_GPIO_21_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_21_PAD_ATTRIBUTE_GPIO_21_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_21_PAD_ATTRIBUTE_GPIO_21_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_21_PAD_ATTRIBUTE_GPIO_21_OFFSET })

// gpio_22 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_22_REG_OFFSET 0x9c
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_22_PAD_ATTRIBUTE_GPIO_22_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_22_PAD_ATTRIBUTE_GPIO_22_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_22_PAD_ATTRIBUTE_GPIO_22_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_22_PAD_ATTRIBUTE_GPIO_22_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_22_PAD_ATTRIBUTE_GPIO_22_OFFSET })

// gpio_23 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_23_REG_OFFSET 0xa0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_23_PAD_ATTRIBUTE_GPIO_23_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_23_PAD_ATTRIBUTE_GPIO_23_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_23_PAD_ATTRIBUTE_GPIO_23_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_23_PAD_ATTRIBUTE_GPIO_23_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_23_PAD_ATTRIBUTE_GPIO_23_OFFSET })

// gpio_24 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_24_REG_OFFSET 0xa4
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_24_PAD_ATTRIBUTE_GPIO_24_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_24_PAD_ATTRIBUTE_GPIO_24_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_GPIO_24_PAD_ATTRIBUTE_GPIO_24_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_24_PAD_ATTRIBUTE_GPIO_24_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_GPIO_24_PAD_ATTRIBUTE_GPIO_24_OFFSET })

// spi_flash_sck Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SCK_REG_OFFSET 0xa8
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SCK_PAD_ATTRIBUTE_SPI_FLASH_SCK_MASK \
  0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SCK_PAD_ATTRIBUTE_SPI_FLASH_SCK_OFFSET \
  0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SCK_PAD_ATTRIBUTE_SPI_FLASH_SCK_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SCK_PAD_ATTRIBUTE_SPI_FLASH_SCK_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SCK_PAD_ATTRIBUTE_SPI_FLASH_SCK_OFFSET })

// spi_flash_cs_0 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_0_REG_OFFSET 0xac
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_0_PAD_ATTRIBUTE_SPI_FLASH_CS_0_MASK \
  0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_0_PAD_ATTRIBUTE_SPI_FLASH_CS_0_OFFSET \
  0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_0_PAD_ATTRIBUTE_SPI_FLASH_CS_0_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_0_PAD_ATTRIBUTE_SPI_FLASH_CS_0_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_0_PAD_ATTRIBUTE_SPI_FLASH_CS_0_OFFSET })

// spi_flash_cs_1 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_1_REG_OFFSET 0xb0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_1_PAD_ATTRIBUTE_SPI_FLASH_CS_1_MASK \
  0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_1_PAD_ATTRIBUTE_SPI_FLASH_CS_1_OFFSET \
  0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_1_PAD_ATTRIBUTE_SPI_FLASH_CS_1_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_1_PAD_ATTRIBUTE_SPI_FLASH_CS_1_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_CS_1_PAD_ATTRIBUTE_SPI_FLASH_CS_1_OFFSET })

// spi_flash_sd_0 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_0_REG_OFFSET 0xb4
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_0_PAD_ATTRIBUTE_SPI_FLASH_SD_0_MASK \
  0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_0_PAD_ATTRIBUTE_SPI_FLASH_SD_0_OFFSET \
  0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_0_PAD_ATTRIBUTE_SPI_FLASH_SD_0_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_0_PAD_ATTRIBUTE_SPI_FLASH_SD_0_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_0_PAD_ATTRIBUTE_SPI_FLASH_SD_0_OFFSET })

// spi_flash_sd_1 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_1_REG_OFFSET 0xb8
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_1_PAD_ATTRIBUTE_SPI_FLASH_SD_1_MASK \
  0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_1_PAD_ATTRIBUTE_SPI_FLASH_SD_1_OFFSET \
  0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_1_PAD_ATTRIBUTE_SPI_FLASH_SD_1_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_1_PAD_ATTRIBUTE_SPI_FLASH_SD_1_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_1_PAD_ATTRIBUTE_SPI_FLASH_SD_1_OFFSET })

// spi_flash_sd_2 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_2_REG_OFFSET 0xbc
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_2_PAD_ATTRIBUTE_SPI_FLASH_SD_2_MASK \
  0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_2_PAD_ATTRIBUTE_SPI_FLASH_SD_2_OFFSET \
  0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_2_PAD_ATTRIBUTE_SPI_FLASH_SD_2_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_2_PAD_ATTRIBUTE_SPI_FLASH_SD_2_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_2_PAD_ATTRIBUTE_SPI_FLASH_SD_2_OFFSET })

// spi_flash_sd_3 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_3_REG_OFFSET 0xc0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_3_PAD_ATTRIBUTE_SPI_FLASH_SD_3_MASK \
  0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_3_PAD_ATTRIBUTE_SPI_FLASH_SD_3_OFFSET \
  0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_3_PAD_ATTRIBUTE_SPI_FLASH_SD_3_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_3_PAD_ATTRIBUTE_SPI_FLASH_SD_3_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_FLASH_SD_3_PAD_ATTRIBUTE_SPI_FLASH_SD_3_OFFSET })

// spi_sck Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SCK_REG_OFFSET 0xc4
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SCK_PAD_ATTRIBUTE_SPI_SCK_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SCK_PAD_ATTRIBUTE_SPI_SCK_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SCK_PAD_ATTRIBUTE_SPI_SCK_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_SCK_PAD_ATTRIBUTE_SPI_SCK_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_SCK_PAD_ATTRIBUTE_SPI_SCK_OFFSET })

// spi_sd_0 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_0_REG_OFFSET 0xc8
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_0_PAD_ATTRIBUTE_SPI_SD_0_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_0_PAD_ATTRIBUTE_SPI_SD_0_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_0_PAD_ATTRIBUTE_SPI_SD_0_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_0_PAD_ATTRIBUTE_SPI_SD_0_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_0_PAD_ATTRIBUTE_SPI_SD_0_OFFSET })

// spi_sd_1 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_1_REG_OFFSET 0xcc
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_1_PAD_ATTRIBUTE_SPI_SD_1_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_1_PAD_ATTRIBUTE_SPI_SD_1_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_1_PAD_ATTRIBUTE_SPI_SD_1_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_1_PAD_ATTRIBUTE_SPI_SD_1_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_1_PAD_ATTRIBUTE_SPI_SD_1_OFFSET })

// spi_sd_2 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_2_REG_OFFSET 0xd0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_2_PAD_ATTRIBUTE_SPI_SD_2_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_2_PAD_ATTRIBUTE_SPI_SD_2_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_2_PAD_ATTRIBUTE_SPI_SD_2_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_2_PAD_ATTRIBUTE_SPI_SD_2_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_2_PAD_ATTRIBUTE_SPI_SD_2_OFFSET })

// spi_sd_3 Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_3_REG_OFFSET 0xd4
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_3_PAD_ATTRIBUTE_SPI_SD_3_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_3_PAD_ATTRIBUTE_SPI_SD_3_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_3_PAD_ATTRIBUTE_SPI_SD_3_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_3_PAD_ATTRIBUTE_SPI_SD_3_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_SPI_SD_3_PAD_ATTRIBUTE_SPI_SD_3_OFFSET })

// i2c_scl Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_I2C_SCL_REG_OFFSET 0xd8
#define PAD_CONTROL_PAD_ATTRIBUTE_I2C_SCL_PAD_ATTRIBUTE_I2C_SCL_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_I2C_SCL_PAD_ATTRIBUTE_I2C_SCL_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_I2C_SCL_PAD_ATTRIBUTE_I2C_SCL_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_I2C_SCL_PAD_ATTRIBUTE_I2C_SCL_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_I2C_SCL_PAD_ATTRIBUTE_I2C_SCL_OFFSET })

// i2c_sda Attributes (Pull Up En, Pull Down En, etc. It is technology
// specific.
#define PAD_CONTROL_PAD_ATTRIBUTE_I2C_SDA_REG_OFFSET 0xdc
#define PAD_CONTROL_PAD_ATTRIBUTE_I2C_SDA_PAD_ATTRIBUTE_I2C_SDA_MASK 0xff
#define PAD_CONTROL_PAD_ATTRIBUTE_I2C_SDA_PAD_ATTRIBUTE_I2C_SDA_OFFSET 0
#define PAD_CONTROL_PAD_ATTRIBUTE_I2C_SDA_PAD_ATTRIBUTE_I2C_SDA_FIELD \
  ((bitfield_field32_t) { .mask = PAD_CONTROL_PAD_ATTRIBUTE_I2C_SDA_PAD_ATTRIBUTE_I2C_SDA_MASK, .index = PAD_CONTROL_PAD_ATTRIBUTE_I2C_SDA_PAD_ATTRIBUTE_I2C_SDA_OFFSET })

#ifdef __cplusplus
}  // extern "C"
#endif
#endif  // _PAD_CONTROL_REG_DEFS_
// End generated register defines for pad_control