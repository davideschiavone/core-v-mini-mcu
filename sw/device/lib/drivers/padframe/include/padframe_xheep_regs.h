// Generated register defines for padframe_xheep_config

// Licensing information found in source file:

#ifndef _PADFRAME_XHEEP_CONFIG_REG_DEFS_
#define _PADFRAME_XHEEP_CONFIG_REG_DEFS_

#ifdef __cplusplus
extern "C" {
#endif
// Register width
#define PADFRAME_XHEEP_CONFIG_PARAM_REG_WIDTH 32

// Read-only IP Information register
#define PADFRAME_XHEEP_CONFIG_INFO_REG_OFFSET 0x0
#define PADFRAME_XHEEP_CONFIG_INFO_HW_VERSION_MASK 0xffff
#define PADFRAME_XHEEP_CONFIG_INFO_HW_VERSION_OFFSET 0
#define PADFRAME_XHEEP_CONFIG_INFO_HW_VERSION_FIELD \
  ((bitfield_field32_t) { .mask = PADFRAME_XHEEP_CONFIG_INFO_HW_VERSION_MASK, .index = PADFRAME_XHEEP_CONFIG_INFO_HW_VERSION_OFFSET })
#define PADFRAME_XHEEP_CONFIG_INFO_PADCOUNT_MASK 0xffff
#define PADFRAME_XHEEP_CONFIG_INFO_PADCOUNT_OFFSET 16
#define PADFRAME_XHEEP_CONFIG_INFO_PADCOUNT_FIELD \
  ((bitfield_field32_t) { .mask = PADFRAME_XHEEP_CONFIG_INFO_PADCOUNT_MASK, .index = PADFRAME_XHEEP_CONFIG_INFO_PADCOUNT_OFFSET })

// Pad signal configuration.
#define PADFRAME_XHEEP_CONFIG_PAD_IO_30_CFG_REG_OFFSET 0x4
#define PADFRAME_XHEEP_CONFIG_PAD_IO_30_CFG_CHIP2PAD_BIT 0
#define PADFRAME_XHEEP_CONFIG_PAD_IO_30_CFG_OUTPUT_EN_BIT 1

// Pad signal port multiplex selection for pad pad_io_30. The programmed
// value defines which port
#define PADFRAME_XHEEP_CONFIG_PAD_IO_30_MUX_SEL_REG_OFFSET 0x8
#define PADFRAME_XHEEP_CONFIG_PAD_IO_30_MUX_SEL_PAD_IO_30_MUX_SEL_MASK 0x3
#define PADFRAME_XHEEP_CONFIG_PAD_IO_30_MUX_SEL_PAD_IO_30_MUX_SEL_OFFSET 0
#define PADFRAME_XHEEP_CONFIG_PAD_IO_30_MUX_SEL_PAD_IO_30_MUX_SEL_FIELD \
  ((bitfield_field32_t) { .mask = PADFRAME_XHEEP_CONFIG_PAD_IO_30_MUX_SEL_PAD_IO_30_MUX_SEL_MASK, .index = PADFRAME_XHEEP_CONFIG_PAD_IO_30_MUX_SEL_PAD_IO_30_MUX_SEL_OFFSET })
#define PADFRAME_XHEEP_CONFIG_PAD_IO_30_MUX_SEL_PAD_IO_30_MUX_SEL_VALUE_REGISTER \
  0x0
#define PADFRAME_XHEEP_CONFIG_PAD_IO_30_MUX_SEL_PAD_IO_30_MUX_SEL_VALUE_PORT_GPIO_GPIO_30 \
  0x1
#define PADFRAME_XHEEP_CONFIG_PAD_IO_30_MUX_SEL_PAD_IO_30_MUX_SEL_VALUE_PORT_I2C_I2C_SDA \
  0x2

// Pad signal configuration.
#define PADFRAME_XHEEP_CONFIG_PAD_IO_31_CFG_REG_OFFSET 0xc
#define PADFRAME_XHEEP_CONFIG_PAD_IO_31_CFG_CHIP2PAD_BIT 0
#define PADFRAME_XHEEP_CONFIG_PAD_IO_31_CFG_OUTPUT_EN_BIT 1

// Pad signal port multiplex selection for pad pad_io_31. The programmed
// value defines which port
#define PADFRAME_XHEEP_CONFIG_PAD_IO_31_MUX_SEL_REG_OFFSET 0x10
#define PADFRAME_XHEEP_CONFIG_PAD_IO_31_MUX_SEL_PAD_IO_31_MUX_SEL_MASK 0x3
#define PADFRAME_XHEEP_CONFIG_PAD_IO_31_MUX_SEL_PAD_IO_31_MUX_SEL_OFFSET 0
#define PADFRAME_XHEEP_CONFIG_PAD_IO_31_MUX_SEL_PAD_IO_31_MUX_SEL_FIELD \
  ((bitfield_field32_t) { .mask = PADFRAME_XHEEP_CONFIG_PAD_IO_31_MUX_SEL_PAD_IO_31_MUX_SEL_MASK, .index = PADFRAME_XHEEP_CONFIG_PAD_IO_31_MUX_SEL_PAD_IO_31_MUX_SEL_OFFSET })
#define PADFRAME_XHEEP_CONFIG_PAD_IO_31_MUX_SEL_PAD_IO_31_MUX_SEL_VALUE_REGISTER \
  0x0
#define PADFRAME_XHEEP_CONFIG_PAD_IO_31_MUX_SEL_PAD_IO_31_MUX_SEL_VALUE_PORT_GPIO_GPIO_31 \
  0x1
#define PADFRAME_XHEEP_CONFIG_PAD_IO_31_MUX_SEL_PAD_IO_31_MUX_SEL_VALUE_PORT_I2C_I2C_SCL \
  0x2

#ifdef __cplusplus
}  // extern "C"
#endif
#endif  // _PADFRAME_XHEEP_CONFIG_REG_DEFS_
// End generated register defines for padframe_xheep_config